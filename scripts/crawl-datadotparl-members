#!/usr/bin/env python

# Grabs the latest members data from data.parliament
# (http://data.parliament.uk/membersdataplatform/memberquery.aspx) and stores as
# XML files, one per member.

import os
import urllib2
import xml.etree.ElementTree as etree

source_urls = {
  'all-current-commons': 'http://data.parliament.uk/membersdataplatform/services/mnis/members/query/membership=all|commonsmemberbetween=2015-03-01and2015-05-01/',
  # 'all-commons': 'http://data.parliament.uk/membersdataplatform/services/mnis/members/query/house*Commons',
  # 'all-lords': 'http://data.parliament.uk/membersdataplatform/services/mnis/members/query/house*Lords'
}

member_url_templ = 'http://data.parliament.uk/membersdataplatform/services/mnis/members/query/id=%s/FullBiog/'

OUT_DIR = os.path.join(os.path.dirname(os.path.abspath(__file__)), '../rawdata/datadotparl')


def write(url, fn):
  data = urllib2.urlopen(url).read()
  open(fn, 'w').write(data)


print 'Update members XML from data.parliament'

for source_type, parl_members_url in source_urls.items():
  members_fn = '%s/%s.xml' % (OUT_DIR, source_type)
  write(parl_members_url, members_fn)
  parl_members = etree.parse(members_fn).getroot()
  if parl_members.tag != 'Members':
    raise Exception('Root tag is not "Members" as expected, got "%s".' % parl_members.tag)

  print 'Found %d members from %s.xml.' % (len(parl_members), source_type)

  for member in parl_members:
    member_url = member_url_templ % member.attrib['Member_Id']
    write(member_url, '%s/%s.xml' % (OUT_DIR, member.attrib['Member_Id']))

print 'Done!'
